#!/usr/bin/env bash
set -euo pipefail

# Auto-bump script for dev branch
# Usage: called from CI on pushes to dev

REPO_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
cd "$REPO_ROOT"

if [[ -z "${GITHUB_TOKEN:-}" ]]; then
  echo "GITHUB_TOKEN not provided; this script expects to run in GitHub Actions with GITHUB_TOKEN set." >&2
  exit 1
fi

git config user.name "github-actions[bot]"
git config user.email "github-actions[bot]@users.noreply.github.com"

source ./version.env

echo "Current version: $VERSION (patch=$PATCH)"

# Capture the commit that triggered this workflow.
BASE_SHORT_SHA=$(git rev-parse --short HEAD)

# Bump patch
PATCH=$((PATCH + 1))
VERSION="$MAJOR.$MINOR.$PATCH"

# Compute prerelease identifier using short SHA
PRERELEASE="dev.$BASE_SHORT_SHA"

echo "Bumping to version: $VERSION (prerelease=$PRERELEASE)"

cat > version.env <<EOF
# TheBoysLauncher Version Configuration (generated by auto-bump)
VERSION=$VERSION
MAJOR=$MAJOR
MINOR=$MINOR
PATCH=$PATCH
BUILD_METADATA=
PRERELEASE=$PRERELEASE

# Full version string is constructed by scripts/get-version.sh
EOF

git add version.env
if git diff --cached --quiet; then
  echo "No changes to commit"
else
  git commit -m "ci: auto-bump dev version to $VERSION-$PRERELEASE"
  # Push the updated dev branch
  git push origin HEAD
  # Create annotated tag for the bumped version
  TAG="v${VERSION}-${PRERELEASE}"
  git tag -a "$TAG" -m "Automated dev bump for $TAG (source $BASE_SHORT_SHA)"
  git push origin "$TAG"
  echo "Pushed commit and tag $TAG"
fi

echo "auto-bump complete"
