name: Promote Stable Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

concurrency:
  group: main-release-promote
  cancel-in-progress: false

jobs:
  promote:
    if: ${{ github.actor != 'github-actions[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Prepare Git credentials
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Promote dev build to stable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: |
          set -eux
          if [ -n "${PERSONAL_ACCESS_TOKEN}" ]; then
            echo "Using PERSONAL_ACCESS_TOKEN to push release tag"
            git remote set-url origin "https://x-access-token:${PERSONAL_ACCESS_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          elif git remote get-url origin | grep -q '@github.com:'; then
            echo "Switching remote to HTTPS to support pushing with GITHUB_TOKEN"
            git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git"
          else
            echo "No PERSONAL_ACCESS_TOKEN provided; pushing with GITHUB_TOKEN"
          fi
          chmod +x ./scripts/promote-release.sh
          ./scripts/promote-release.sh

      - name: Show promotion summary
        run: |
          echo "Latest commits:"
          git --no-pager log -3 --oneline
          echo "Tags:"
          git tag --sort=-creatordate | head -n 5
