name: Simple Build Test

# Simple build test without artifacts or complex steps
on:
  push:
    branches: [ macos-support ]
  workflow_dispatch:

jobs:
  build-test:
    name: ${{ matrix.os }} Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # Don't cancel other jobs if one fails
      matrix:
        include:
          - os: windows-latest
            arch: amd64
            build_cmd: go build -ldflags="-s -w -H=windowsgui -X main.version=v3.0.1-ci" -o TheBoysLauncher.exe .
          - os: macos-latest
            arch: amd64
            build_cmd: GOOS=darwin GOARCH=amd64 CGO_ENABLED=1 go build -ldflags="-s -w -X main.version=v3.0.1-ci" -o TheBoysLauncher .
          - os: macos-latest
            arch: arm64
            build_cmd: GOOS=darwin GOARCH=arm64 CGO_ENABLED=1 go build -ldflags="-s -w -X main.version=v3.0.1-ci" -o TheBoysLauncher-arm64 .

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Test build on ${{ matrix.os }}/${{ matrix.arch }}
      timeout-minutes: 10  # Kill if it takes too long
      run: |
        echo "Building on ${{ matrix.os }} for ${{ matrix.arch }}..."
        ${{ matrix.build_cmd }}

        # Verify the binary was created
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          if (Test-Path "TheBoysLauncher.exe") {
            Write-Host "✓ Windows build successful!"
            Get-ChildItem TheBoysLauncher.exe | Format-Table Name, Length
          } else {
            Write-Error "Windows build failed - no executable created"
            exit 1
          }
        else {
          if [ -f "TheBoysLauncher" ] || [ -f "TheBoysLauncher-arm64" ]; then
            echo "✓ macOS build successful!"
            ls -la TheBoysLauncher*
          else {
            echo "macOS build failed - no executable created"
            exit 1
          }
        }